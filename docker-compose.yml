version: '3.8'

x-airflow-common:
  &airflow-common
  image: apache/airflow:2.8.1
  environment:
    &airflow-env
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    AIRFLOW__CORE__PLUGINS_FOLDER: /opt/airflow/plugins
    PYTHONPATH: /opt/airflow:/opt/airflow/include
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ./include:/opt/airflow/include
  depends_on:
    - postgres
    - redis

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data

  redis:
    image: redis:latest

  airflow-webserver:
    <<: *airflow-common
    container_name: airflow-webserver
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5

  airflow-scheduler:
    <<: *airflow-common
    container_name: airflow-scheduler
    command: scheduler

  airflow-worker:
    <<: *airflow-common
    container_name: airflow-worker
    command: celery worker

  airflow-init:
    <<: *airflow-common
    container_name: airflow-init
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./include:/opt/airflow/include
      - ./airflow_settings.yaml:/opt/airflow/airflow_settings.yaml
    command: >
      bash -c "
        echo 'ðŸ”§ Running Airflow DB migration...' && \
        airflow db migrate && \
        echo 'âœ… Creating default admin user...' && \
        airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com \
        echo 'ðŸ“¦ Importing Airflow settings from YAML...' && \
        python /opt/airflow/include/airflow_setup.py
      "
  

  mysql:
    image: mysql:8.0
    container_name: mysql-container
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: konfio_coding_challenge
      MYSQL_USER: dev_user
      MYSQL_PASSWORD: dev_pass
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql

  jupyter:
    image: jupyter/scipy-notebook:python-3.11
    container_name: jupyter-notebook
    user: root
    ports:
      - "8888:8888"
    volumes:
      - ./notebooks:/home/jovyan/work
    environment:
      - JUPYTER_ENABLE_LAB=yes
    command: >
      bash -c "
        apt-get update && \
        apt-get install -y openjdk-11-jdk && \
        start-notebook.sh --NotebookApp.token='' --NotebookApp.password=''
      "

  spark:
    image: bitnami/spark:3.5.0
    container_name: spark
    environment:
      - SPARK_MODE=standalone
    ports:
      - "4040:4040"   # Spark UI
    volumes:
      - ./spark-apps:/opt/spark-apps

volumes:
  postgres-db-volume:
  mysql-data:
